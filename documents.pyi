from typing import Any, Dict, List, Optional, Union

from .api_call import ApiCall
from .document import Document

class Documents(object):
    RESOURCE_PATH: str
    api_call: ApiCall
    collection_name: str
    documents: Dict[str, Document]

    def __init__(self, api_call: ApiCall, collection_name: str) -> None: ...
    def __getitem__(self, document_id: str) -> Document: ...
    def _endpoint_path(self, action: Optional[str] = None) -> str: ...
    def create(
        self, document: Dict[str, Any], params: Optional[Dict[str, Any]] = None
    ) -> Dict[str, Any]: ...
    def create_many(
        self, documents: List[Dict[str, Any]], params: Optional[Dict[str, Any]] = None
    ) -> Dict[str, Any]: ...
    def upsert(
        self, document: Dict[str, Any], params: Optional[Dict[str, Any]] = None
    ) -> Dict[str, Any]: ...
    def update(
        self, document: Dict[str, Any], params: Optional[Dict[str, Any]] = None
    ) -> Dict[str, Any]: ...
    def import_jsonl(self, documents_jsonl: str) -> Dict[str, Any]: ...
    def import_(
        self,
        documents: Union[List[Dict[str, Any]], str, bytes],
        params: Optional[Dict[str, Any]] = None,
        batch_size: Optional[int] = None,
    ) -> list[dict[str, Any]]: ...
    def export(self, params: Optional[Dict[str, Any]] = None) -> str: ...
    def search(self, search_parameters: Dict[str, Any]) -> Dict[str, Any]: ...
    def delete(self, params: Optional[Dict[str, Any]] = None) -> Dict[str, Any]: ...
